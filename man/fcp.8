.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "FCP" "8" "October 2015" "" ""
.
.SH "NAME"
\fBfcp\fR \- A Scalable Parallel Data Copy Tool
.
.SH "SYNOPSIS"
.
.nf

fcp file1 file2
fcp file1 file2 file3 \.\.\. target_directory
fcp src_dir dest_dir

mpirun \-np 8 fcp \.\.\.
.
.fi
.
.SH "DESCRIPTION"
\fBfcp\fR is a program designed to do large\-scale parallel data transfer across \fIlocally\fR mounted file systems\. It is not for wide area data transfers such as ftp, bbcp, or grid\-ftp\. In that sense, it is closer to \fBcp\fR\. Generally speaking, \fBfcp\fR works in two stages: first it analyzes the workload by walking the tree in parallel; and then it parallelizes the data copy operation, all based on a highly efficient and self\-balanced parallelization engine\. \fBfcp\fR supports the following options:
.
.TP
\fB\-p\fR, \fB\-\-preserve\fR
Preserve metadata attributes\. In the case of Lustre, the striping information is kept\.
.
.TP
\fB\-f\fR, \fB\-\-force\fR
Overwrite the destination directory\. The default is off\.
.
.TP
\fB\-\-verify\fR
Perform checksum\-based verification after the copy\.
.
.TP
\fB\-s\fR, \fB\-\-signature\fR
Generate a single sha1 signature for the entire dataset\. This option also implies \fB\-\-verify\fR for post\-copy verification\.
.
.TP
\fB\-\-chunksize sz\fR
\fBfcp\fR will break up large files into pieces to increase parallelism\. By default, \fBfcp\fR adaptively sets the chunk size based on the overall size of the workload\. Use this option to specify a particular chunk size in KB, MB\. For example, \fB\-\-chunksize 128MB\fR\.
.
.TP
\fB\-\-reduce\-interval\fR
Controls progress report frequency\. The default is 10 seconds\.
.
.SH "PERFORMANCE CONSIDERATIONS"
\fBfcp\fR performance is subject to the bandwidth and conditions of the source file system, the storage area network, the destination file system, and the number of processes and nodes involved in the transfer\. Using more processes per node does not necessarily result in better performance due to an increase in the number of metadata operations as well as additional contention generated from a larger number of processes\. A rule of thumb is to match or halve the number of physical cores per transfer node\.
.
.P
Both post copy verification (\fB\-\-verify\fR) and dataset signature (\fB\-\-signature\fR) options have performance implications\. When turned on, \fBfcp\fR calculates the checksums of each chunk/file for both source and destination, in addition to reading back from destination\. This increases both the amount of bookkeeping and memory usage\. Therefore, for large scale data transfers, a large memory node is recommended\.
.
.SH "AUTHOR"
Feiyi Wang (fwang2@ornl\.gov)
